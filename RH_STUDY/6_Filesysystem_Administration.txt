====================================================================================
*********************************** FILESYSTEMS ************************************
====================================================================================

**** FILESYSTEMS ****

[root@localhost ~]# mkfs.ext4 /dev/sdb

mke2fs 1.42.9 (28-Dec-2013)
/dev/sdb is entire device, not just one partition!
Proceed anyway? (y,n) y
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
524288 inodes, 2097152 blocks
104857 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=2147483648
64 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
  32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done


_________________________________________________________________
FSCK

Var mounted on /dev/sdb1

Go into runleve 1:
init 1

unmount /var (would be in the *fstab)

fsck -t ext4 /dev/sdb1

Remount:

mount /dev/sdb1 /var

_________________________________________________________________
TUNE2FS

Add jounaling to an ext2 filesystem:

1/ Mount as read only (or unmount)

mount -o remount,ro /dev/sdb1

2/ tune that sucker

tune2fs -j /dev/sdb1

3/ remount read/ write

mount -o remount,rw /dev/sdb1

4/ Change entry in *fstab file from ext2 to ext3

5/ Change back

tune2fs ^O has_journal

from ext2 pr ext3 to ext4 is a one way street but here ya are:

tune2fs -o extent,uninit_bg,dir_index /dev/vd1

6/ View setings

dumpe2fs /dev/vda1 | grep "Filesystem features"

_________________________________________________________________

See Swaps:

[root@localhost ~]# cat /proc/swaps 
Filename        Type    Size  Used  Priority
/dev/dm-1                               partition 839676  1924  -1


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
--------------------------------EXERCISE 6-2--------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*MKFS

Making DA filesystem:

[root@localhost ~]# mkfs.ext2 /dev/sdc1
mke2fs 1.42.9 (28-Dec-2013)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
61056 inodes, 244140 blocks
12207 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=251658240
8 block groups
32768 blocks per group, 32768 fragments per group
7632 inodes per group
Superblock backups stored on blocks: 
  32768, 98304, 163840, 229376

Allocating group tables: done                            
Writing inode tables: done                            
Writing superblocks and filesystem accounting information: done

*DUMPE2FS

[root@localhost ~]# dumpe2fs /dev/sdd
dumpe2fs 1.42.9 (28-Dec-2013)
Filesystem volume name:   <none>
Last mounted on:          <not available>
Filesystem UUID:          37a019e9-f25e-433b-83e8-94bc2d7d701c
Filesystem magic number:  0xEF53
Filesystem revision #:    1 (dynamic)
Filesystem features:      ext_attr resize_inode dir_index filetype sparse_super large_file
Filesystem flags:         signed_directory_hash 
Default mount options:    user_xattr acl
Filesystem state:         clean
Errors behavior:          Continue
Filesystem OS type:       Linux
Inode count:              262144
Block count:              1048576
Reserved block count:     52428
Free blocks:              1030066
Free inodes:              262133
First block:              0
Block size:               4096
Fragment size:            4096
Reserved GDT blocks:      255
Blocks per group:         32768
Fragments per group:      32768
Inodes per group:         8192
Inode blocks per group:   512
Filesystem created:       Thu Jun 18 22:08:37 2015
Last mount time:          n/a
Last write time:          Thu Jun 18 22:08:37 2015
Mount count:              0
Maximum mount count:      -1
Last checked:             Thu Jun 18 22:08:37 2015
Check interval:           0 (<none>)
Reserved blocks uid:      0 (user root)
Reserved blocks gid:      0 (group root)
First inode:              11
Inode size:           256
Required extra isize:     28
Desired extra isize:      28
Default directory hash:   half_md4
Directory Hash Seed:      ecba2966-083e-4f6d-a975-78ef7d4bb2e8


Group 0: (Blocks 0-32767)
  Primary superblock at 0, Group descriptors at 1-1
  Reserved GDT blocks at 2-256
  Block bitmap at 257 (+257), Inode bitmap at 258 (+258)
  Inode table at 259-770 (+259)
  31991 free blocks, 8181 free inodes, 2 directories
  Free blocks: 777-32767
  Free inodes: 12-8192

*MNT

Mount on /mnt folder:

mount /dev/sdc1 /mnt

View mounted folder:

[root@localhost ~]# mount | grep /mnt
/dev/sdc1 on /mnt type ext2 (rw,relatime,seclabel)

*TUNE2FS

Turn on journaling/ make ext3:

[root@localhost ~]# tune2fs -j /dev/sdc1

Disk /dev/sdc: 2147MB
Sector size (logical/physical): 512B/512B
Partition Table: msdos
Disk Flags: 

Number  Start   End     Size    Type     File system  Flags
 1      512B    1000MB  1000MB  primary  ext3
 2      1000MB  2147MB  1147MB  primary

Now we cookin:

[root@localhost ~]# mount /dev/sdc1 /mnt
[root@localhost ~]# mount | grep /mnt
/dev/sdc1 on /mnt type ext3 (rw,relatime,seclabel,data=ordered)

??? - no idea what this command did:

 tune2fs -O extent,uninit_bg,dir_index /dev/sda1

*MKFS.EXT4

[root@localhost ~]# mkfs.ext4 /dev/sdc1
mke2fs 1.42.9 (28-Dec-2013)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
61056 inodes, 244140 blocks
12207 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=251658240
8 block groups
32768 blocks per group, 32768 fragments per group
7632 inodes per group
Superblock backups stored on blocks: 
  32768, 98304, 163840, 229376

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

---------------------------------------------------------------------
FHS - FILESYTEM HIERACHY STANDARD

/boot recommended on seperate disks:

Linux kernel, Initial RAM Disk, and bootloader 

Don't mount these guys on seperate disk:

/bin, /dev, /etc, /lib, /root, /sbin, and /selinux

/proc and /sys files are filled during boot and disappear when powered down


====================================================================================
***********************************    **LUKS     ************************************
====================================================================================

See if the required module is loaded - yep looking good:

[root@localhost ~]# lsmod | grep dm_crypt
dm_crypt               23138  0 
dm_mod                104038  9 dm_log,dm_mirror,dm_crypt

1/ Add random data to a disk:

*badblocks -c 10240 -s -w -t random -v /dev/sdf

Or using *DD

*dd if=/dev/urandom of=/dev/sdf

2/ Encrpt with LUKS:

*cryptsetup luksFormat /dev/sdf

3/ Create a UUID for the device:

[root@localhost ~]# *cryptsetup luksUUID /dev/sdf
6f1a927a-40a0-47ed-9bc9-f5a182eeea0d

Header Info:

root@localhost ~]# *cryptsetup luksDump /dev/sdf
LUKS header information for /dev/sdf

Version:        1
Cipher name:    aes
Cipher mode:    xts-plain64
Hash spec:      sha1
Payload offset: 4096
MK bits:        256
MK digest:      98 fe 97 dc 5e 54 01 a4 a1 d2 42 ff 7d b5 b3 a6 2a a2 5e 0c 
MK salt:        66 67 db 4d dc ea d2 dd 79 54 47 c4 ab b1 c2 81 
                58 ff 39 2e d8 a9 be e6 cd 46 07 60 5f 7c 8e 99 
MK iterations:  82000
UUID:           6f1a927a-40a0-47ed-9bc9-f5a182eeea0d

Key Slot 0: ENABLED
  Iterations:           316439
  Salt:                 44 3b 02 62 3f 10 90 c9 5d 66 d1 e6 b3 5e fb 5a 
                          01 3a c6 aa f8 e0 85 ac e0 6d 7c 77 c2 b8 b5 80 
  Key material offset:  8
  AF stripes:             4000
Key Slot 1: DISABLED
Key Slot 2: DISABLED
Key Slot 3: DISABLED
Key Slot 4: DISABLED
Key Slot 5: DISABLED
Key Slot 6: DISABLED
Key Slot 7: DISABLED

4/ Add UUID to device:

[root@localhost ~]# cryptsetup luksOpen /dev/sdf 6f1a927a-40a0-47ed-9bc9-f5a182eeea0d
Enter passphrase for /dev/sdf: 

A novel approach:

# cryptsetup luksUUID /dev/sda1 > sda1uuid
# cryptsetup luksOpen /dev/sda1 `cat sda1uuid`

Now visible in /dev/mapper:

[root@localhost ~]# ls -ltr  /dev/mapper/
total 0
crw-------. 1 root root 10, 236 Jul  3 16:13 control
lrwxrwxrwx. 1 root root       7 Jul  3 16:26 centos-root -> ../dm-0
lrwxrwxrwx. 1 root root       7 Jul  3 16:26 centos-swap -> ../dm-1
lrwxrwxrwx. 1 root root       7 Jul  3 16:35 6f1a927a-40a0-47ed-9bc9-f5a182eeea0d -> ../dm-2

**Don't have to call it the UUID - could do:

cryptsetup luksOpen /dev/sdf test

5/ Make filesystem on the volume:

mkfs.ext4 /dev/mzpper/6f1a927a-40a0-47ed-9bc9-f5a182eeea0d

6/ Put in /etc/fstab:

The UUID above isn't the UUID of the filesystem. To get that:

[root@localhost mnt]# dumpe2fs /dev/mapper/6f1a927a-40a0-47ed-9bc9-f5a182eeea0d | grep UUID
dumpe2fs 1.42.9 (28-Dec-2013)
Filesystem UUID:          b43917de-1e44-4474-92b9-5dfd6630e923

**BLKID

Shows UUIDs for devices:

[root@localhost mnt]# blkid
/dev/sr0: UUID="2015-02-12-15-58-24-00" LABEL="VBOXADDITIONS_4.3.22_98236" TYPE="iso9660" 
/dev/sdf: UUID="6f1a927a-40a0-47ed-9bc9-f5a182eeea0d" TYPE="crypto_LUKS" 
/dev/sdd: UUID="37a019e9-f25e-433b-83e8-94bc2d7d701c" TYPE="ext2" 
/dev/sdb: UUID="dea41fd7-3f33-4b5c-97da-500cfe14086b" TYPE="ext4" 
/dev/sda1: UUID="0fbfc05a-0f53-43f4-98b0-ce856517d313" TYPE="xfs" 
/dev/sda2: UUID="qZw6wm-o0kt-Fcmq-iajl-NQEP-H95Z-Xi3zjg" TYPE="LVM2_member" 
/dev/sde1: UUID="062a3f60-db30-4bce-8bfe-b258a571ca3d" TYPE="ext4" 
/dev/sde4: UUID="3d523bcb-0502-4b9c-8a77-65bb74ef5da4" TYPE="swap" 
/dev/mapper/centos-root: UUID="1ab0b45f-c037-417c-a983-33d599d6cb1b" TYPE="xfs" 
/dev/mapper/centos-swap: UUID="d9853317-c9ac-4883-a83c-1cc540614813" TYPE="swap" 
/dev/mapper/6f1a927a-40a0-47ed-9bc9-f5a182eeea0d: UUID="b43917de-1e44-4474-92b9-5dfd6630e923" TYPE="ext4" 

**MTAB

Verify how partitions are mounted in /etc/mstab

[root@localhost ~]# cat /etc/mtab
rootfs / rootfs rw 0 0
proc /proc proc rw,nosuid,nodev,noexec,relatime 0 0
sysfs /sys sysfs rw,seclabel,nosuid,nodev,noexec,relatime 0 0
devtmpfs /dev devtmpfs rw,seclabel,nosuid,size=241260k,nr_inodes=60315,mode=755 0 0
securityfs /sys/kernel/security securityfs rw,nosuid,nodev,noexec,relatime 0 0
tmpfs /dev/shm tmpfs rw,seclabel,nosuid,nodev 0 0
devpts /dev/pts devpts rw,seclabel,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000 0 0
tmpfs /run tmpfs rw,seclabel,nosuid,nodev,mode=755 0 0
tmpfs /sys/fs/cgroup tmpfs rw,seclabel,nosuid,nodev,noexec,mode=755 0 0
cgroup /sys/fs/cgroup/systemd cgroup rw,nosuid,nodev,noexec,relatime,xattr,release_agent=/usr/lib/systemd/systemd-cgroups-agent,name=systemd 0 0
pstore /sys/fs/pstore pstore rw,nosuid,nodev,noexec,relatime 0 0
cgroup /sys/fs/cgroup/cpuset cgroup rw,nosuid,nodev,noexec,relatime,cpuset 0 0
cgroup /sys/fs/cgroup/cpu,cpuacct cgroup rw,nosuid,nodev,noexec,relatime,cpuacct,cpu 0 0
cgroup /sys/fs/cgroup/memory cgroup rw,nosuid,nodev,noexec,relatime,memory 0 0
cgroup /sys/fs/cgroup/devices cgroup rw,nosuid,nodev,noexec,relatime,devices 0 0
cgroup /sys/fs/cgroup/freezer cgroup rw,nosuid,nodev,noexec,relatime,freezer 0 0
cgroup /sys/fs/cgroup/net_cls cgroup rw,nosuid,nodev,noexec,relatime,net_cls 0 0
cgroup /sys/fs/cgroup/blkio cgroup rw,nosuid,nodev,noexec,relatime,blkio 0 0
cgroup /sys/fs/cgroup/perf_event cgroup rw,nosuid,nodev,noexec,relatime,perf_event 0 0
cgroup /sys/fs/cgroup/hugetlb cgroup rw,nosuid,nodev,noexec,relatime,hugetlb 0 0
configfs /sys/kernel/config configfs rw,relatime 0 0
/dev/mapper/centos-root / xfs rw,seclabel,relatime,attr2,inode64,noquota 0 0
selinuxfs /sys/fs/selinux selinuxfs rw,relatime 0 0
systemd-1 /proc/sys/fs/binfmt_misc autofs rw,relatime,fd=31,pgrp=1,timeout=300,minproto=5,maxproto=5,direct 0 0
mqueue /dev/mqueue mqueue rw,seclabel,relatime 0 0
hugetlbfs /dev/hugepages hugetlbfs rw,seclabel,relatime 0 0
debugfs /sys/kernel/debug debugfs rw,relatime 0 0
/dev/sda1 /boot xfs rw,seclabel,relatime,attr2,inode64,noquota 0 0
gvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1000,group_id=1000 0 0
fusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0
/dev/sr0 /run/media/nickschofield/VBOXADDITIONS_4.3.22_98236 iso9660 ro,nosuid,nodev,relatime,uid=1000,gid=1000,iocharset=utf8,mode=0400,dmode=0500 0 0
/dev/mapper/6f1a927a-40a0-47ed-9bc9-f5a182eeea0d /test ext4 rw,seclabel,relatime,data=ordered 0 0

---------------------------------------------------------------------
**FSTAB EXPLAINED

UUID=b43917de-1e44-4474-92b9-5dfd6630e923     /test             ext4              defaults              1           2

device                                      Mount point   Filesystem format     mount options     Dump value    Filesystem check order

Dump Order:
0 = not automatically saved to disk
1 = automatically saved to disk by dump command

Filesystem Check Order:

0 = Not checked during boot process
1 = Set root directory to this
2 = All other local filesystems

Mount Options:

async     = Data is read and written asynchronously.
atime     = The inode associated with each file is updated each time the file is
            accessed.
auto      = Searches through /etc/filesystems for the appropriate format for the
            partition; normally associated with a floppy or removable drive.
defaults  = Uses default mount options rw, suid, dev, exec, auto, nouser, and async.
dev       = Permits access to character devices such as terminals or consoles and
            block devices such as drives.
exec      = Allows binaries (compiled programs) to be run on this filesystem.
noatime   = The inode associated with each file is not updated when accessed.
noauto    = Requires explicit mounting. Common option for CD and floppy drives.
nodev     = Devices on this filesystem are not read or interpreted.
noexec    = Binaries (compiled programs) cannot be run on this filesystem.
nosuid    = Disallows setuid or setgid permissions on this filesystem.
nouser    = Only root users are allowed to mount the specified filesystem.
remount   = Remounts a currently mounted filesystem. Also an option for the
            mount command.
ro        = Mounts the filesystem as read-only.
rw        = Mounts the filesystem as read/write.
suid      = Allows setuid or setgid permissions on programs on this filesystem.
sync      = Reads and writes are done at the same speed (synchronously) on this
filesystem.
user      = Allows nonroot users to mount this filesystem. By default, this also
            sets the noexec, nosuid, and nodev options.
____________________________________
VIRTUAL FILESYSTEMS

Virtual filesystems that book says are configured in /etc/fstab (not) but can be seen in mount command.

tmpfs  /dev/shm    tmpfs    defaults          0 0
devpts /dev/pts   devpts    gid=5,mode=620    0 0
sysfs  /sys        sysfs    defaults          0 0
proc   /proc       proc     defaults          0 0

*tmpfs = RAM and Swap space

*devpts = psedo terminals (??)

*sysfs = info about system devices.

[root@localhost ~]# ls -ltr /sys
total 0
drwxr-xr-x.   9 root root 0 Jul  6 08:53 kernel
drwxr-xr-x. 136 root root 0 Jul  6 08:53 module
drwxr-xr-x.   6 root root 0 Jul  6 08:53 fs
drwxr-xr-x.  12 root root 0 Jul  6 08:53 devices
drwxr-xr-x.  43 root root 0 Jul  6 08:53 class
drwxr-xr-x.  24 root root 0 Jul  6 08:53 bus
drwxr-xr-x.   4 root root 0 Jul  6 08:53 dev
drwxr-xr-x.   2 root root 0 Jul  6 08:53 block
drwxr-xr-x.   2 root root 0 Jul  6 08:53 power
drwxr-xr-x.   5 root root 0 Jul  6 08:54 firmware
drwxr-xr-x.   2 root root 0 Jul  6 11:20 hypervisor

*proc = options for changing behaviour of kernel

_______________________________________________________
*MOUNT

Mounting a CD/DVD directly:

mount -t iso9660 /dev/sr0 /mnt

*iso9660 is the filesystem type


Can see guest additions mounted using blkid command:

/dev/sr0: UUID="2015-02-12-15-58-24-00" LABEL="VBOXADDITIONS_4.3.22_98236" TYPE="iso9660"

Change options so CD can be mounted by regular users:
- read-only mode
-doesn't try to automount it during boot process

/dev/sr0 /cdrom auto ro,noauto,users 0 0


_________________________________________________________
 *NFS AND *SAMBA

 e.g. (the following is a bit risky)

 mount -t nfs server1.example.com:/pub /share

Less risky - chuck in /etc/fstab:

server1:/pub nfs rsize=8192,wsize=8192,timeo=14,intr,udp  0   0

rsize, wsize = blocks of data to be read (bytes)

timeo = client will wait 1.4 secs for request to be compeleted

intr = can be interupted if NFS isn't responding

use nfs4 if connection is using NFS v4


*SAMBA

A bit simpler...

//server/pub  /share  cifs  rw,username=user,password=pass, 0 0

If you want it a bit more secure then chuck

username=user
password=password

in /etc/secret and use:

//server/pub /share cifs rw,credentials=/etc/secret 0 0

_________________________________________________________
*AUTOFS DAEMON

Default automounter options in this file:

AUTOFS FILE

[root@localhost ~]# cat /etc/sysconfig/autofs
#
# Init syatem options
#
# If the kernel supports using the autofs miscellanous device
# and you wish to use it you must set this configuration option
# to "yes" otherwise it will not be used.
#
USE_MISC_DEVICE="yes"
#
# Use OPTIONS to add automount(8) command line options that
# will be used when the daemon is started.
#
#OPTIONS=""
#
##############################################

**Supposed to have:

- a TIMEOUT=300 but not there.

- BROWSE_MODE=”no”


AUTO.MASTER FILE

Contains - which point to config files for each service:

/misc /etc/auto.misc  (which refers to /etc/auto.misc)
/net -hosts           (which refers to /etc/auto.net)
+auto.master          (which refers to /etc/auto.master?!?!)

Shared dirs are mounted on /misc and /net

_________________________________________________________
AUTOMOUNTER CONFIG FILE

**CD active by default with a 300 second timeout

[root@localhost ~]# cat /etc/auto.misc
#
# This is an automounter map and it has the following format
# key [ -mount-options-separated-by-comma ] location
# Details may be found in the autofs(5) manpage

cd    -fstype=iso9660,ro,nosuid,nodev :/dev/cdrom

# the following entries are samples to pique your imagination
#linux    -ro,soft,intr   ftp.example.org:/pub/linux
#boot   -fstype=ext2    :/dev/hda1
#floppy   -fstype=auto    :/dev/fd0
#floppy   -fstype=ext2    :/dev/fd0
#e2floppy -fstype=ext2    :/dev/fd0
#jaz    -fstype=ext2    :/dev/sdc1
#removable  -fstype=ext2    :/dev/hdd
#######################################################

This allows /misc/linux (auto mounted on misc & net dirs) mount point from a share NFS dir 
/pub/linux from ftp.example.org

linux    -ro,soft,intr   ftp.example.org:/pub/linux

For this line - auto means /etc/filesystems will be searched for what's on your disk

#floppy   -fstype=auto    :/dev/fd0

[root@localhost ~]# cat /etc/filesystems 
xfs
ext4
ext3
ext2
nodev proc
nodev devpts
iso9660
vfat
hfs
hfsplus
*


/////////////////////////////////////////////
==================LAB1=======================
/////////////////////////////////////////////

VGs and LVs both have UUIDs.

**Strange - when I used parted to make the partition, when I use the dump2gfs command to try and get the UUID it gives me this:

[root@localhost ~]# dumpe2fs /dev/sdf3
dumpe2fs 1.42.9 (28-Dec-2013)
dumpe2fs: Bad magic number in super-block while trying to open /dev/sdf3
Couldn't find valid filesystem superblock.

But when I do mkfs.ext4 /dev/sdf2 and run it again it gives all the info.



____________________________________________________________________________________
ADDITIONAL NOTES

ntfsprogs - supports the mounting of NTFS filesystems

[root@localhost ~]# mkswap /dev/sdf4
Setting up swapspace version 1, size = 976892 KiB
no label, UUID=76431b36-f2c7-4f45-8422-e64cde9efca3
[root@localhost ~]# swapon /dev/sdf4

/etc/fstab:

UUID=76431b36-f2c7-4f45-8422-e64cde9efca3   swap    swap  defaults  0 0

/////////////////////////////////////////////
==================LAB2=======================
/////////////////////////////////////////////

Wiped partition to begin again:

wipefs -a --force "/dev/sdf"

Removed partition from swap (cat /proc/swaps):

swapoff /dev/sdf4

Had to reboot and in rescue mode comment out the fstab entries followed by another reboot.

1/ do the parted thing

2/ pvcreate /dev/sdf1 etc.

3/ vgcreate lab2 /dev/sdf1 etc.

4/ lv create -L 2500 /dev/lab2/jolly_hockeysticks

5/ Rename vg: 

vgrename /dev/lab2 /dev/rad2

6/ Rename lg:

[root@localhost ~]# lvrename /dev/rad2/jolly_hockeystick /dev/rad2/sk8ordi3
  Renamed "jolly_hockeystick" to "sk8ordi3" in volume group "rad2"

7/ Make fs:

mkfs.ext4 /dev/rad2/sk8ordi3

mount /dev/rad2/sk8ordi3 /mnt/sk8ordi3

[root@localhost ~]# mount | grep sk8
/dev/mapper/rad2-sk8ordi3 on /mnt/sk8ordi3 type ext4 (rw,relatime,seclabel,data=ordered)

/////////////////////////////////////////////
==================LAB3=======================
/////////////////////////////////////////////

Resize that son of a gun:

[root@localhost ~]# lvextend -L 2850 /dev/rad2/sk8ordi3
  Rounding size to boundary between physical extents: 2.79 GiB
  Size of logical volume rad2/sk8ordi3 changed from 2.73 GiB (700 extents) to 2.79 GiB (713 extents).
  Logical volume sk8ordi3 successfully resized

/////////////////////////////////////////////
==================LAB4=======================
/////////////////////////////////////////////

cryptsetup luksFormat /dev/rad2/sk8ordi3

Enter password

Get info: 

cryptsetup luksDump /dev/rad2/sk8ordi3

Get the UUID:

[root@localhost ~]# cryptsetup luksUUID /dev/rad2/sk8ordi3
618d97b8-f49d-4363-be35-3537dba1ec58

Add UUID to it:

cryptsetup luksOpen /dev/rad2/sk8ordi3 618d97b8-f49d-4363-be35-3537dba1ec58

mkfs.ext4 /dev/mapper/0b74f243-4610-49f4-8a15-ba71219dd6c9

Get the UUID for the fstab:

[root@localhost ~]# dumpe2fs /dev/mapper/0b74f243-4610-49f4-8a15-ba71219dd6c9 | grep -i UUID
dumpe2fs 1.42.9 (28-Dec-2013)
Filesystem UUID:          fb2c48b4-3acc-4c24-a94d-f41d3088db70

/////////////////////////////////////////////
==================LAB5=======================
/////////////////////////////////////////////

/////////////////////////////////////////////
==================LAB6=======================
/////////////////////////////////////////////